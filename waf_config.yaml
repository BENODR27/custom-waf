# WAF configuration - patterns are regular expressions (case-insensitive)
patterns:
  sql_injection:
    - "(?:')\\s*OR\\s*'1'\\s*=\\s*'1" # classic tautology
    - "UNION\\s+SELECT"
    - "SELECT\\s+.+\\s+FROM"
  xss:
    - "<script\\b[^>]*>.*?</script>" # script tags
    - "\\bonerror\\s*=" # onerror attributes
    - "javascript:" # javascript: URI usage
  code_injection:
    - "\\beval\\s*\\(" # eval(
    - "\\bexec\\s*\\(" # exec(
  os_command_injection:
    - '(?:\b(exec|system|popen)\b\s*\()' # only function calls in payloads
    - '(?:;|\&\&|\|){2,}' # matches repeated command chaining
  crlf_injection:
    - "%0d%0a" # encoded CRLF
  ldap_injection:
    - "\\(&\\(objectClass=\\*\\)\\)" # LDAP wildcard injection pattern
  xpath_injection:
    - "count\\s*\\(//" # XPath count(//
  rce:
    - "\\bimport\\s+os\\b"
    - "\\bsubprocess\\b"
  xxe:
    - "<!DOCTYPE\\s"
    - "<!ENTITY\\s"
  ssrf:
    - "http://127\\.0\\.0\\.1"
    - "file://"
  path_traversal:
    - "\\.\\./" # ../
    - "/etc/passwd"
  backdoor:
    - "\\bcmd\\s*=\\b"
    - "\\bshell\\s*=\\b"
  bruteforce:
    - "login_attempt"
  http_flood:
    - "massive_request"
  bot_abuse:
    - "User-Agent:\\s*python-requests"

# IP addresses to always block (strings)
ip_blacklist:
  - "192.168.1.100"
  - "10.0.0.5"

# Rate limiting: limit requests per `window` seconds per IP
rate_limit:
  limit: 100
  window: 60
